@model IEnumerable<OnlineStore.Models.Product>

@{
    ViewBag.Title = "Display Products";
}

<div class="container mt-5">
    <h2 class="text-center p-3" style="background-color: yellowgreen; color: orangered;">
        Display Products
    </h2>

    <table class="table table-bordered table-hover table-striped mt-4">
        <thead class="thead-dark">
            <tr>
                <th>@Html.DisplayNameFor(P => P.ProductId)</th>
                <th>@Html.DisplayNameFor(P => P.ProductName)</th>
                <th>@Html.DisplayNameFor(P => P.UnitPrice)</th>
                <th>@Html.DisplayNameFor(P => P.ProductImage)</th>
                <th>@Html.DisplayNameFor(P => P.CategoryId)</th>
                <th>@Html.DisplayNameFor(P => P.Category.CategoryName)</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                foreach (var product in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(P => product.ProductId)</td>
                        <td>@Html.DisplayFor(P => product.ProductName)</td>
                        <td>@Html.DisplayFor(P => product.UnitPrice)</td>
                        <td>
                            <img src="/Uploads/@product.ProductImageName" class="img-thumbnail" style="width: 80px; height: auto;" alt="No Image" />
                        </td>
                        <td>@Html.DisplayFor(P => product.CategoryId)</td>
                        <td>@Html.DisplayFor(P => product.Category.CategoryName)</td>
                        <td>
                            @Html.ActionLink("View", "DisplayProduct", new { productId = product.ProductId }, new { @class = "btn btn-primary btn-sm" })
                            @Html.ActionLink("Edit", "EditProduct", new { productId = product.ProductId }, new { @class = "btn btn-primary btn-sm" })
                            @Html.ActionLink("Delete", "DeleteProduct", new { productId = product.ProductId },
                            new { @class = "btn btn-danger btn-sm", onclick = "return confirm('Are you sure you want to delete this record?')" })
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="7" class="text-center text-muted">No products available.</td>
                </tr>
            }
        </tbody>
       @* <tfoot>
            <tr>
                <td colspan="8" class="text-center">
                    <a href="@Url.Action("AddProduct")" class="btn btn-success">Add New Product</a>
                </td>
            </tr>
        </tfoot>*@
    </table>

            <div class="d-flex justify-content-between align-items-center">
                <div>
                    @if (ViewBag.CurrentPage > 1)
                    {
                        <a href="@Url.Action("DisplayProducts", new { page = ViewBag.CurrentPage - 1, pageSize = ViewBag.PageSize })" class="btn btn-info btn-sm">Previous</a>
                    }
                </div>

                <div>
                    @for (int i = 1; i <= ViewBag.TotalPages; i++)
                    {
                        <a href="@Url.Action("DisplayProducts", new { page = i, pageSize = ViewBag.PageSize })" class="btn btn-sm @((i == ViewBag.CurrentPage) ? "btn-primary" : "btn-light")">
                            @i
                        </a>
                    }
                </div>

                <div>
                    @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                    {
                        <a href="@Url.Action("DisplayProducts", new { page = ViewBag.CurrentPage + 1, pageSize = ViewBag.PageSize })" class="btn btn-info btn-sm">Next</a>
                    }
                </div>
            </div>

            <div class="mt-3">
                <a href="@Url.Action("AddProduct")" class="btn btn-success">Add New Product</a>
            </div>
</div>
